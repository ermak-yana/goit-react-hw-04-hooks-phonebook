{"version":3,"sources":["components/Form/Form.module.css","components/FormList/FormList.module.css","components/Filter/Filtre.module.css","components/Container/Container.module.css","components/Form/Form.js","components/FormList/FormList.js","components/Filter/Filter.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","Form","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","obj","props","addNewContact","resetForm","nameId","uuidv","telId","this","className","s","form","onSubmit","label","htmlFor","input","onChange","id","type","pattern","title","required","btn","Component","FormList","contacts","onDeleteContact","list","map","item","onClick","Filter","Container","children","container","App","filter","addContact","contact","uuidv4","some","i","alert","prevState","changeFilter","currentTarget","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","localStorage","getItem","parseContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e9a7fb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__20cZs\",\"label\":\"Form_label__eCklq\",\"input\":\"Form_input__1R0kc\",\"btn\":\"Form_btn__rf1IM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FormList_list__1PqW5\",\"item\":\"FormList_item__kaglA\",\"btn\":\"FormList_btn__2jsSM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filtre_label__2d22A\",\"input\":\"Filtre_input__3H01V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__ZpQ4B\"};","import { Component } from \"react\";\r\nimport { v4 as uuidv } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Form.module.css\";\r\n\r\nexport class Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const obj = {\r\n      name,\r\n      number,\r\n    };\r\n    this.props.addNewContact(obj);\r\n    this.resetForm();\r\n  };\r\n  resetForm = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  nameId = uuidv();\r\n  telId = uuidv();\r\n\r\n  render() {\r\n    const { handleSubmit, nameId, handleChange, telId } = this;\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label className={s.label} htmlFor={nameId}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          onChange={handleChange}\r\n          id={nameId}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <label className={s.label} htmlFor={telId}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          onChange={handleChange}\r\n          id={telId}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n        <button className={s.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport s from \"./FormList.module.css\";\r\n\r\n// function FormList({ contacts, onDeleteContact }) {\r\n//   return (\r\n//     <ul className={s.list}>\r\n//       {contacts.map(({ id, name, number }) => (\r\n//         <li className={s.item} key={id}>\r\n//           <p>\r\n//             {name}: {number}\r\n//           </p>\r\n//           <button\r\n//             className={s.btn}\r\n//             type=\"button\"\r\n//             onClick={() => onDeleteContact(id)}\r\n//           >\r\n//             Delete\r\n//           </button>\r\n//         </li>\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// }\r\n\r\nconst FormList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.item} key={id}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            className={s.btn}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default FormList;\r\n\r\nFormList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Filtre.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.label}>\r\n    Finde contacts by name\r\n    <input\r\n      type=\"text\"\r\n      className={s.input}\r\n      value={value}\r\n      onChange={onChange}\r\n    ></input>\r\n  </label>\r\n);\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import { Component } from \"react\";\nimport { Form } from \"./components/Form/Form\";\nimport FormList from \"./components/FormList/FormList\";\nimport Filter from \"./components/Filter/Filter\";\nimport Container from \"./components/Container/Container\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    this.state.contacts.some((i) => i.name === contact.name)\n      ? alert(`${name} is already in contacts`)\n      : this.setState((prevState) => ({\n          contacts: [contact, ...prevState.contacts],\n        }));\n  };\n\n  addNewContact = (obj) => {\n    this.setState((prevState) => {\n      return { contacts: [...prevState.contacts, obj] };\n    });\n  };\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parseContacts = JSON.parse(contacts);\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter, contacts } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <Form addNewContact={this.addContact} />\n        <h2>Contacts</h2>{\" \"}\n        {contacts.length > 1 && (\n          <Filter value={filter} onChange={this.changeFilter} />\n        )}\n        {contacts.length > 0 ? (\n          <FormList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        ) : (\n          <p>Your phonebook is empty. Please add contact.</p>\n        )}\n      </Container>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}